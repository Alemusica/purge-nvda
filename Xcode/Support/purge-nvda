#!/bin/sh
# Script (purge-nvda.sh) by mac_editor @ egpu.io (mayankk2308@gmail.com)
# Version: 1.3.0 (Internal)


operation="$1"
backup_dir="/Library/Application Support/Purge-NVDA/"

check_sudo()
{
    if [[ "$(id -u)" != 0 ]]
    then
      exit 1
    fi
}

check_sys_integrity_protection()
{
    if [[ `csrutil status | grep -i "enabled"` ]]
    then
        exit 2
    fi
}

check_macos_version()
{
    macos_ver=`sw_vers -productVersion`
    if [[ "$macos_ver" == "10.13" ||  "$macos_ver" == "10.13.1" || "$macos_ver" == "10.13.2" || "$macos_ver" == "10.13.3" ]]
    then
        exit 3
    fi
}

invoke_kext_caching()
{
    touch /System/Library/Extensions
    kextcache -q -update-volume /
}

update_nvram()
{
    flag="$1"
    /usr/sbin/nvram fa4ce28d-b62f-4c99-9cc3-6815686e30f9:gpu-power-prefs="%01%00%00%00"
    nvram fa4ce28d-b62f-4c99-9cc3-6815686e30f9:gpu-active="%01%00%00%00"
    /usr/sbin/nvram boot-args=""
    if [[ "$flag" == "true" ]]
    then
        /usr/sbin/nvram boot-args="nv_disable=1"
    fi
}

restore_nvram()
{
    nvram -d fa4ce28d-b62f-4c99-9cc3-6815686e30f9:gpu-power-prefs
    nvram -d fa4ce28d-b62f-4c99-9cc3-6815686e30f9:gpu-active
    nvram -d boot-args
}

move_nvda_drv()
{
    mkdir -p "$backup_dir"
    if [[ "$(ls /System/Library/Extensions/ | grep NVDA)" && "$(ls /System/Library/Extensions/ | grep GeForce)" ]]
    then
      if [[ "$(ls "$backup_dir")" ]]
      then
        rm -r "$backup_dir"*
      fi
      mv /System/Library/Extensions/GeForce*.* "$backup_dir"
    else
        exit
    fi
}

restore_nvda_drv()
{
    rsync -r -u "$backup_dir"* /System/Library/Extensions/
}

uninstall()
{
    restore_nvram
    if [[ -d "$backup_dir" ]]
    then
        restore_nvda_drv
        invoke_kext_caching
        rm -r "$backup_dir"
    fi
}

check_sudo
check_sys_integrity_protection
if [[ "$operation" == "-i" ]]
then
    check_macos_version
    update_nvram "true"
elif [[ "$operation" == "-so" ]]
then
    update_nvram "false"
    move_nvda_drv
    invoke_kext_caching
elif [[ "$operation" == "-u" ]]
then
    uninstall
elif [[ "$operation" == "-r" ]]
then
    reboot
else
    exit 4
fi
exit 0
